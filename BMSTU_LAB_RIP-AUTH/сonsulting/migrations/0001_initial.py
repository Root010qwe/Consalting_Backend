# Generated by Django 5.1.3 on 2025-01-09 13:56

import django.db.models.deletion
import сonsulting.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsultingService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('D', 'Deleted')], default='A', max_length=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Длительность в часах', null=True)),
                ('image_url', models.URLField(blank=True, help_text='Ссылка на изображение услуги', null=True)),
            ],
            options={
                'db_table': 'consulting_services',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='Username')),
                ('password', models.CharField(verbose_name='Password')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Является ли пользователь менеджером?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Является ли пользователь админом?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', сonsulting.models.NewUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ConsultingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Completed', 'Completed'), ('Rejected', 'Rejected'), ('Deleted', 'Deleted')], default='Draft', max_length=9)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sender', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'consulting_requests',
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_email', models.EmailField(blank=True, default='', max_length=254, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to='сonsulting.consultingrequest')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to='сonsulting.consultingservice')),
            ],
            options={
                'db_table': 'service_requests',
                'unique_together': {('request', 'service')},
            },
        ),
    ]
